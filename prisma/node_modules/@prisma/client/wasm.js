
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.6.0
 * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
 */
Prisma.prismaVersion = {
  client: "6.6.0",
  engine: "f676762280b54cd07c770017ed3711ddde35f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.PlantGroupScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.PlantScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  plantGroupId: 'plantGroupId'
};

exports.Prisma.NormsScalarFieldEnum = {
  id: 'id',
  temperatureMin: 'temperatureMin',
  temperatureMax: 'temperatureMax',
  airHumidityMin: 'airHumidityMin',
  airHumidityMax: 'airHumidityMax',
  substrateHumidityMin: 'substrateHumidityMin',
  substrateHumidityMax: 'substrateHumidityMax',
  phLevelMin: 'phLevelMin',
  phLevelMax: 'phLevelMax',
  nutrientConcentrationMin: 'nutrientConcentrationMin',
  nutrientConcentrationMax: 'nutrientConcentrationMax',
  solutionTemperatureMin: 'solutionTemperatureMin',
  solutionTemperatureMax: 'solutionTemperatureMax',
  solutionLvlMin: 'solutionLvlMin',
  solutionLvlMax: 'solutionLvlMax',
  lightIntensityMin: 'lightIntensityMin',
  lightIntensityMax: 'lightIntensityMax',
  plantId: 'plantId'
};

exports.Prisma.StationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  userId: 'userId'
};

exports.Prisma.ZoneScalarFieldEnum = {
  id: 'id',
  name: 'name',
  plantId: 'plantId',
  isLightOn: 'isLightOn',
  stationId: 'stationId'
};

exports.Prisma.ZoneNormsScalarFieldEnum = {
  id: 'id',
  temperatureMin: 'temperatureMin',
  temperatureMax: 'temperatureMax',
  airHumidityMin: 'airHumidityMin',
  airHumidityMax: 'airHumidityMax',
  substrateHumidityMin: 'substrateHumidityMin',
  substrateHumidityMax: 'substrateHumidityMax',
  phLevelMin: 'phLevelMin',
  phLevelMax: 'phLevelMax',
  nutrientConcentrationMin: 'nutrientConcentrationMin',
  nutrientConcentrationMax: 'nutrientConcentrationMax',
  solutionTemperatureMin: 'solutionTemperatureMin',
  solutionTemperatureMax: 'solutionTemperatureMax',
  solutionLvlMin: 'solutionLvlMin',
  solutionLvlMax: 'solutionLvlMax',
  lightIntensityMin: 'lightIntensityMin',
  lightIntensityMax: 'lightIntensityMax',
  zoneId: 'zoneId'
};

exports.Prisma.StationParamsLogScalarFieldEnum = {
  id: 'id',
  stationId: 'stationId',
  recordedAt: 'recordedAt',
  phLevel: 'phLevel',
  nutrientConcentration: 'nutrientConcentration',
  solutionTemperature: 'solutionTemperature',
  solutionLvl: 'solutionLvl'
};

exports.Prisma.ZoneParamsLogScalarFieldEnum = {
  id: 'id',
  zoneId: 'zoneId',
  recordedAt: 'recordedAt',
  temperature: 'temperature',
  airHumidity: 'airHumidity',
  substrateHumidity: 'substrateHumidity',
  isLightOn: 'isLightOn'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  role: 'role'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  USER: 'USER'
};

exports.Prisma.ModelName = {
  PlantGroup: 'PlantGroup',
  Plant: 'Plant',
  Norms: 'Norms',
  Station: 'Station',
  Zone: 'Zone',
  ZoneNorms: 'ZoneNorms',
  StationParamsLog: 'StationParamsLog',
  ZoneParamsLog: 'ZoneParamsLog',
  User: 'User'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
